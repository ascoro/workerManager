/*! workerManager - v0.1.0 - 2013-07-19
* Copyright (c) 2013 Albert Serra; Licensed  */
var workerManager=function(a){a=a||{};var b=this,c=a.functions||[],d=[],e=[],f=a.numWorkers||4,g=function(){var a=new l({callback:j,functions:c});return a.count=e.length,e.push(a),a},h=function(){for(var a=-1,b=0,c=0;e[c];c++){var d=e[c].activeTasks;if(0==d)return e[c];(a>d||0>a)&&(a=e[c].activeTasks,b=c)}};b.execute=function(a,b,c){var d=Math.floor(1e11*Math.random()),e={name:a,params:b,callbackHash:d,timestamp:new Date,callback:c};i(e)};var i=function(a){console.log("About to assign "),console.log(a);var b=h();b?(b.executeTask(a),console.log("Assigned"),j()):(d.push(a),console.log("Queued"))},j=function(){for(;d[0];){var a=h();if(!a)break;a.executeTask(d.pop())}},k=function(){for(var a=0;f>a;a++)g()};b.printStatistics=function(){for(var a=0;e[a];a++)console.log(e[a].getStatistics())};var l=function(a){var b,c=this,d=a.functions,e=[];c.activeTasks=0,c.timeSpend=0,c.totalTasks=0,c.getStatistics=function(){return"Worker "+c.count+" has processed "+c.totalTasks+" tasks in "+c.timeSpend+" milliseconds"},this.executeTask=function(a){e[a.callbackHash]=a,c.activeTasks++,c.totalTasks++,console.log("Init task "+a.callbackHash+" to function "+a.name+" from worker num "+c.count),b.postMessage(JSON.stringify(a))};var f=function(a){for(var b=a.length,c="",d=0;b>d;d++){var e=a[d];c+='case "'+e.name+'":'+e.code+";break;"}return URL.createObjectURL(new window.Blob(["self.addEventListener('message', function(e) { var o = JSON.parse(e.data);var params = o.params; var result={success:true}; switch(o.name){"+c+"default:result={success:false,message:'Not implemented'};break;}; result.callbackHash=o.callbackHash;self.postMessage(JSON.stringify(result)); }, false);"]))},g=function(a,b){var d=b.timestamp.getTime()-a.timestamp.getTime();c.timeSpend+=d},h=function(b){b.timestamp=new Date;var d=e[b.callbackHash];delete e[b.callbackHash],g(d,b),c.activeTasks--,console.log("Return task "+d.callbackHash+" to function "+d.name+" from worker num "+c.count),setTimeout(a.callback,0),setTimeout(function(){d.callback({result:b,task:d})},0)},i=function(){b=new Worker(f(d)),b.addEventListener("message",function(a){h(JSON.parse(a.data))},!1)};i()};k()};