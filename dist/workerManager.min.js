/*! workerManager - v0.1.0 - 2013-07-23
* Copyright (c) 2013 Albert Serra; Licensed  */
var workerManager=function(a){a=a||{};var b=this,c=a.functions||[],d=[],e=[],f=a.numWorkers||0,g=function(a){var b=new coroWorker({callback:i,functions:c,simulateWorker:a});return b.id=e.length,e.push(b),b},h=function(){for(var a=0;e[a];a++)if(0==e[a].activeTasks)return e[a]};b.execute=function(a,b,c){var e=Math.floor(1e11*Math.random()),f={name:a,params:b,callbackHash:e,timestamp:new Date,callback:c};d.push(f),i()};var i=function(){for(;d[0];){var a=h();if(!a)break;a.executeTask(d.pop())}},j=function(){for(var a=0;f>a;a++)g();e[0]||g(!0)};b.printStatistics=function(){for(var a=0;e[a];a++)console.log(e[a].getStatistics())},j()},coroWorker=function(settings){var thiz=this,simulateWorker=settings.simulateWorker,webWorker,functions=settings.functions,tasks=[];thiz.activeTasks=0,thiz.timeSpend=0,thiz.totalTasks=0,thiz.getStatistics=function(){return"Worker "+thiz.id+" has processed "+thiz.totalTasks+" tasks in "+thiz.timeSpend+" milliseconds"},this.executeTask=function(a){updateStatisticsPreTask(a),startTask(a)};var startTask=function(a){webWorker.postMessage(JSON.stringify(a))},concatenateCodeIntoSwitchCases=function(a){for(var b=a.length,c="",d=0;b>d;d++){var e=a[d];c+='case "'+e.name+'":'+e.code+";break;"}return c+="default:result={success:false,message:'Not implemented'};break;",c="var params = o.params; var result={success:true}; switch(o.name){"+c+"}; result.callbackHash=o.callbackHash; "},generateBlob=function(a){var b=concatenateCodeIntoSwitchCases(a),c="self.postMessage(JSON.stringify(result));",d="self.addEventListener('message',function(e){var o=JSON.parse(e.data);"+b+c+"},false);";return URL.createObjectURL(new window.Blob([d],{type:"text/javascript"}))},generateEvaluableString=function(a){var b=concatenateCodeIntoSwitchCases(a),c="callbackWorker(result);",d="startTask=function(o){"+b+c+"}";return d},updateStatisticsPostTask=function(a,b){var c=b.timestamp.getTime()-a.timestamp.getTime();thiz.timeSpend+=c,thiz.activeTasks--,console.log("Return task "+a.callbackHash+" to function "+a.name+" from worker num "+thiz.id)},updateStatisticsPreTask=function(a){tasks[a.callbackHash]=a,thiz.activeTasks++,thiz.totalTasks++,console.log("Init task "+a.callbackHash+" to function "+a.name+" from worker num "+thiz.id)},callbackWorker=function(a){a.timestamp=new Date;var b=tasks[a.callbackHash];updateStatisticsPostTask(b,a),setTimeout(settings.callback,0),b.callback({result:a,task:b})},init=function(){simulateWorker?eval(generateEvaluableString(functions)):(webWorker=new Worker(generateBlob(functions)),webWorker.addEventListener("message",function(a){callbackWorker(JSON.parse(a.data))},!1))};init()};